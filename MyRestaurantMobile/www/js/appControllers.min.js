(function() {
    'use strict';

    angular
          .module('myrestaurant.controllers')
          .controller('AppController', AppController);

    AppController.$inject = ['$state', '$auth', '$rootScope', 'CartService', 'AuthService'];

    function AppController($state, $auth, $rootScope, CartService, AuthService){
      var vm = this;

      vm.CartService = CartService;
      vm.AuthService = AuthService;
      vm.isActive = isActive;

      //For navigation purposes
      function isActive(stateName){
        return $state.includes(stateName);
      }

    }
})();

(function() {
    'use strict';

    angular
          .module('myrestaurant.controllers')
          .controller('CartController', CartController);

    CartController.$inject = ['$state', '$stateParams', 'ItemService', 'CartService'];

    function CartController($state, $stateParams, ItemService, CartService){

      var vm = this;

      vm.CartService = CartService;
      vm.CartService.addItem({id: 1, title: 'product', price: 20}, 1);
      vm.listCanSwipe = true;

    }
})();

(function() {
    'use strict';

    angular
          .module('myrestaurant.controllers')
          .controller('CategoriesController', CategoriesController);

    CategoriesController.$inject = ['CategoryService', '$rootScope'];

    function CategoriesController(CategoryService, $rootScope){
      var vm = this;

      vm.categories = [];
      vm.error = false;
      vm.doRefresh = doRefresh;

      CategoryService.getAllCategories().then(function() {
        if(CategoryService.error){
            vm.error = true;
        }
        vm.categories = CategoryService.data;
      });

      function doRefresh() {
        CategoryService.getAllCategories().then(function() {

          vm.error = false;

          if(CategoryService.error){
              vm.error = true;
          }

          vm.categories = CategoryService.data;

        }).finally(function() {
           // Stop the ion-refresher from spinning
           $rootScope.$broadcast('scroll.refreshComplete');
         });
      }

    }
})();

(function() {
    'use strict';

		angular
					.module('myrestaurant.controllers')
					.controller('CategoryController', CategoryController);

		CategoryController.$inject = ['$scope', '$state', '$stateParams', '$ionicLoading', 'ItemService'];

		function CategoryController($scope, $state, $stateParams, $ionicLoading, ItemService){
			var vm = this;

		  vm.items = [];
			vm.clearSearch = clearSearch;

			vm.category_name = $stateParams.category_name;
			vm.category_id = $stateParams.category_id;

			$scope.$on('$ionicView.enter', function(e) {
					ItemService.getAllItemsByCategoryId(vm.category_id).then(function() {
				    vm.items = ItemService.data;
				  });
			});

			function clearSearch(){
				vm.searchItem = '';
			}
		}
})();

(function() {
    'use strict';
    
    angular
          .module('myrestaurant.controllers')
          .controller('ContactController', ContactController);

    ContactController.$inject = ['$scope'];

    function ContactController(){
        var vm = this;
    }
})();

(function() {
    'use strict';

    angular
          .module('myrestaurant.controllers')
          .controller('ItemController', ItemController);

    ItemController.$inject = ['$state', '$stateParams', 'ItemService', 'CartService'];

    function ItemController($state, $stateParams, ItemService, CartService){
      var vm = this;

      vm.item = [];
      vm.itemQuantity = 1;

      vm.cart = CartService;

      var category_id = $stateParams.category_id;
      var item_id = $stateParams.item_id;

      ItemService.getItem(category_id, item_id).then(function() {
        vm.item = ItemService.data;
      });
    }
})();

(function() {
    'use strict';

    angular
          .module('myrestaurant.controllers')
          .controller('LoginController', LoginController);

    LoginController.$inject = ['AuthService'];

    function LoginController(AuthService){
      var vm = this;
      vm.AuthService = AuthService;
    }
})();

(function() {
    'use strict';

    angular
        .module('myrestaurant.controllers')
        .controller('OrderDetailsController', OrderDetailsController);

    OrderDetailsController.$inject = ['CartService', 'OrderService'];

    /* @ngInject */
    function OrderDetailsController(CartService, OrderService) {

        var vm = this;

        vm.CartService = CartService;
        vm.OrderService = OrderService;

        activate();

        function activate() {

        }
    }
})();

(function() {
    'use strict';

    angular
          .module('myrestaurant.controllers')
          .controller('SettingsController', SettingsController);

    SettingsController.$inject = [];

    function SettingsController(){
        var vm = this;
    }
})();

(function() {
    'use strict';

    angular
          .module('myrestaurant.controllers')
          .controller('TranslateController', TranslateController);

    TranslateController.$inject = ['$translate', '$state', '$ionicHistory'];

    function TranslateController($translate, $state, $ionicHistory){
      var vm = this;

      vm.changeLanguage = changeLanguage;

      function changeLanguage (langKey) {
        $translate.use(langKey);

        $ionicHistory.nextViewOptions({
    	    disableBack: true
      	});

        $state.go('app.home');

      }

    }
})();
